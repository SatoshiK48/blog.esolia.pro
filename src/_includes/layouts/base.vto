<!doctype html>
<!-- ===== base.vto LAYOUT START ===== -->

<html lang="{{ it.lang }}">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ it.title || metas.title }} - {{ metas.site }}</title>

    <meta name="supported-color-schemes" content="light dark">
    <meta name="theme-color" content="hsl(220, 20%, 100%)" media="(prefers-color-scheme: light)">
    <meta name="theme-color" content="hsl(220, 20%, 10%)" media="(prefers-color-scheme: dark)">
    
    <link rel="stylesheet" href="/styles.css">
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <link rel="alternate" href="/feed.xml" type="application/atom+xml" title="{{ metas.site }}">
    <link rel="alternate" href="/feed.json" type="application/json" title="{{ metas.site }}">
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon.png">
    <link rel="canonical" href="{{ url |> url(true) }}">
    <script src="/js/main.js" type="module"></script>
    {{ it.extra_head?.join("\n") }}
    {{# <script>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC
      document.documentElement.classList.toggle(
      "dark", localStorage.theme === "dark" ||
      (!("theme" in localStorage) && window.matchMedia("(prefers-color-scheme: dark)").matches),
      );
      // Whenever the user explicitly chooses light mode
      localStorage.theme = "light";
      // Whenever the user explicitly chooses dark mode
      localStorage.theme = "dark";
      // Whenever the user explicitly chooses to respect the OS preference
      localStorage.removeItem("theme");
    </script> #}}
    
    <!-- Theme toggle script -->
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.data('themeToggle', () => ({
                darkMode: localStorage.getItem('darkMode') === 'true' || false,
                init() {
                    this.$watch('darkMode', value => {
                        localStorage.setItem('darkMode', value);
                        document.body.classList.toggle('dark', value);
                    });
                    // Ensure the correct class is applied on page load
                    document.body.classList.toggle('dark', this.darkMode);
                }
            }));
        });
    </script>
  </head>
  <body class="flex h-full bg-zinc-50 dark:bg-black">
  <script>
    !(function () {
      try {
        var d = document.documentElement,
          c = d.classList
        c.remove('light', 'dark')
        var e = localStorage.getItem('theme')
        if ('system' === e || (!e && true)) {
          var t = '(prefers-color-scheme: dark)',
            m = window.matchMedia(t)
          if (m.media !== t || m.matches) {
            d.style.colorScheme = 'dark'
            c.add('dark')
          } else {
            d.style.colorScheme = 'light'
            c.add('light')
          }
        } else if (e) {
          c.add(e || '')
        }
        if (e === 'light' || e === 'dark') d.style.colorScheme = e
      } catch (e) {}
    })()
  </script>
    <!-- Container start -->
    <div class="flex w-full">
      <div class="fixed inset-0 flex justify-center sm:px-8">
        <div class="flex w-full max-w-7xl lg:px-8">
          <div
            class="w-full bg-white ring-1 ring-zinc-100 dark:bg-zinc-900 dark:ring-zinc-300/20"
          ></div>
        </div>
      </div>
      <div class="relative flex w-full flex-col">
      {{ include "templates/top-nav.vto" }}
      <div class="flex-none" style="height: var(--content-offset)"></div>

      
      {{ content }}
    
      
    
      <!-- Current page: {{ url }} -->
      {{ include "templates/footer.vto" }}
      </div>
    </div>
    <!-- Container end -->
    <script>
    window.addEventListener('scroll', () => {
        const largeLogo = document.getElementById('large-logo');
        const smallLogo = document.getElementById('small-logo');
        const scrollPosition = window.scrollY;

        if (scrollPosition > 10) {
            largeLogo.classList.add('opacity-0');
            smallLogo.classList.remove('opacity-0');
        } else {
            largeLogo.classList.remove('opacity-0');
            smallLogo.classList.add('opacity-0');
        }
    });
</script>
  </body>
  <!-- ===== base.vto LAYOUT END ===== -->
</html>
